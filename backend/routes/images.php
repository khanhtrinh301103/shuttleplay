<?php
// File location: backend/routes/images.php

use Illuminate\Support\Facades\Route;
use App\Http\Controllers\ProductImageController;

/*
|--------------------------------------------------------------------------
| Product Image Routes
|--------------------------------------------------------------------------
|
| Routes cho qu·∫£n l√Ω h√¨nh ·∫£nh s·∫£n ph·∫©m v·ªõi Cloudinary
| Thi·∫øt k·∫ø m·ªõi: T√°ch ri√™ng Main Image v√† Secondary Images
|
*/

Route::middleware('auth:sanctum')->group(function () {
    
    /*
    |--------------------------------------------------------------------------
    | Seller Image Management Routes
    |--------------------------------------------------------------------------
    */
    
    // Ch·ªâ seller m·ªõi ƒë∆∞·ª£c truy c·∫≠p nh·ªØng routes n√†y
    Route::middleware(['role:seller'])->group(function () {
        
        /*
        |--------------------------------------------------------------------------
        | üÜï MAIN IMAGE ROUTES (1 ·∫£nh ch√≠nh duy nh·∫•t)
        |--------------------------------------------------------------------------
        */
        
        // Upload/Replace ·∫£nh ch√≠nh cho s·∫£n ph·∫©m (1 ·∫£nh duy nh·∫•t)
        Route::post('/seller/products/{productId}/main-image', [ProductImageController::class, 'uploadMainImage']);
        
        /*
        |--------------------------------------------------------------------------
        | üÜï SECONDARY IMAGES ROUTES (nhi·ªÅu ·∫£nh ph·ª•)
        |--------------------------------------------------------------------------
        */
        
        // Upload ·∫£nh ph·ª• cho s·∫£n ph·∫©m (nhi·ªÅu ·∫£nh)
        Route::post('/seller/products/{productId}/secondary-images', [ProductImageController::class, 'uploadSecondaryImages']);
        
        /*
        |--------------------------------------------------------------------------
        | GENERAL IMAGE MANAGEMENT ROUTES
        |--------------------------------------------------------------------------
        */
        
        // L·∫•y t·∫•t c·∫£ ·∫£nh c·ªßa s·∫£n ph·∫©m (main + secondary)
        Route::get('/seller/products/{productId}/images', [ProductImageController::class, 'getProductImages']);
        
        // X√≥a m·ªôt image c·ª• th·ªÉ (main ho·∫∑c secondary)
        Route::delete('/seller/products/{productId}/images/{imageId}', [ProductImageController::class, 'deleteImage']);
        
        // ƒê·∫∑t ·∫£nh ph·ª• th√†nh ·∫£nh ch√≠nh (promote secondary to main)
        Route::patch('/seller/products/{productId}/images/{imageId}/set-main', [ProductImageController::class, 'setMainImage']);
        
        // L·∫•y c√°c URL bi·∫øn ƒë·ªïi c·ªßa ·∫£nh (thumbnail, medium, large)
        Route::get('/seller/products/{productId}/images/{imageId}/transformations', [ProductImageController::class, 'getTransformedUrls']);
        
    });

});

/*
|--------------------------------------------------------------------------
| API Documentation
|--------------------------------------------------------------------------
*/

/*
üÜï NEW IMAGE API ARCHITECTURE:

1. MAIN IMAGE API:
   POST /api/seller/products/{productId}/main-image
   - Body: form-data v·ªõi field "main_image" (single file)
   - Purpose: Upload/Replace ·∫£nh ch√≠nh duy nh·∫•t
   - Logic: N·∫øu ƒë√£ c√≥ main image ‚Üí replace, n·∫øu ch∆∞a ‚Üí create new

2. SECONDARY IMAGES API:
   POST /api/seller/products/{productId}/secondary-images  
   - Body: form-data v·ªõi field "secondary_images[]" (multiple files)
   - Purpose: Upload nhi·ªÅu ·∫£nh ph·ª•
   - Logic: T·∫•t c·∫£ ƒë·ªÅu is_main = false

3. GET IMAGES:
   GET /api/seller/products/{productId}/images
   - Response: {main_image: object, secondary_images: array}

4. DELETE IMAGE:
   DELETE /api/seller/products/{productId}/images/{imageId}
   - Logic: N·∫øu x√≥a main image ‚Üí promote secondary image ƒë·∫ßu ti√™n th√†nh main

5. PROMOTE TO MAIN:
   PATCH /api/seller/products/{productId}/images/{imageId}/set-main
   - Logic: Chuy·ªÉn secondary image th√†nh main image

EXAMPLE USAGE:

// 1. Upload main image
POST /api/seller/products/123/main-image
Content-Type: multipart/form-data
Authorization: Bearer TOKEN

Form data:
- main_image: [file]

// 2. Upload secondary images  
POST /api/seller/products/123/secondary-images
Content-Type: multipart/form-data
Authorization: Bearer TOKEN

Form data:
- secondary_images[]: [file1]
- secondary_images[]: [file2] 
- secondary_images[]: [file3]

// 3. Get all images
GET /api/seller/products/123/images

// 4. Delete an image
DELETE /api/seller/products/123/images/456

// 5. Promote secondary to main
PATCH /api/seller/products/123/images/456/set-main

*/